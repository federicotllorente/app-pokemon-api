(()=>{"use strict";const e=()=>'\n        <div class="pageError">\n            <h2>Error 404</h2>\n            <p>Sorry, but this page doesn\'t exist. Try with another page or directory.</p>\n            <br><a href="/">Return to the Homepage</a>\n        </div>\n    ',n=async e=>{try{return(await fetch(e)).json()}catch{console.error(error)}},t={"/":async()=>{const e=async e=>{const o=await n(e),s=o.results;for(let e of s){const t=await n(e.url);if(0==document.querySelectorAll(`.${t.name}`).length){let e,n=t.name,o=n.charAt(0).toUpperCase()+n.slice(1),s=t.id;e=s>0&&s<=9?`https://assets.pokemon.com/assets/cms2/img/pokedex/full/00${s}.png`:s>=10&&s<=99?`https://assets.pokemon.com/assets/cms2/img/pokedex/full/0${s}.png`:`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${s}.png`;let a=0;for(const e of t.types)a++;let i=1==a?"Type":"Types",r=0;for(const e of t.abilities)r++;let l=1==r?"Ability":"Abilities",c=t.height/10,p=3.281*c,d=Math.round(3.281*c),h=`0${`${p}`.substring(1)}`,m=Math.round(12*h),u=t.weight/10,y=Math.round(2.205*u);wrapper.innerHTML+=`\n                    <a href="#/${s}">\n                        <div id="${s}" class="pokemon_card ${t.name}">\n                            <div class="pokemon_card__image" style="background-image: url(${e});"></div>\n                            <div class="pokemon_card__description">\n                                <h3 class="pokemon_card__description__name">${o}</h3>\n                                <h4>${i}</h4>\n                                <ul>\n                                    ${t.types.map((e=>`\n                                        <li>–${e.type.name.charAt(0).toUpperCase()+e.type.name.slice(1)}</li>\n                                    `)).join("")}\n                                </ul>\n                                <h4>${l}</h4>\n                                <ul>\n                                    ${t.abilities.map((e=>`\n                                        <li>–${e.ability.name.charAt(0).toUpperCase()+e.ability.name.slice(1)}</li>\n                                    `)).join("")}\n                                </ul>\n                                <h4>Height</h4>\n                                <p>${d}'${m} ft</p>\n                                <h4>Weight</h4>\n                                <p>${y} lbs</p>\n                            </div>\n                        </div>\n                    </a>\n                `}}let a=o.next;document.addEventListener("scroll",(()=>{let e=document.body.offsetHeight;window.scrollY+window.innerHeight==e&&t(a)}))},t=n=>{0==document.querySelectorAll(".pokemon_card").length?e("https://pokeapi.co/api/v2/pokemon/"):e(n)};t()},"/:id":async e=>{const t=document.querySelector("body"),o=document.querySelector("header");t.classList.add("body--card_open"),o.classList.add("header--card_open");const s=await n(`https://pokeapi.co/api/v2/pokemon/${e}/`);let a,i=s.name,r=i.charAt(0).toUpperCase()+i.slice(1),l=s.id;a=l>0&&l<=9?`https://assets.pokemon.com/assets/cms2/img/pokedex/full/00${l}.png`:l>=10&&l<=99?`https://assets.pokemon.com/assets/cms2/img/pokedex/full/0${l}.png`:`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${l}.png`;let c=0;for(const e of s.types)c++;let p=1==c?"Type":"Types",d=0;for(const e of s.abilities)d++;let h=1==d?"Ability":"Abilities",m=s.height/10,u=3.281*m,y=Math.round(3.281*m),g=`0${`${u}`.substring(1)}`,$=Math.round(12*g),_=s.weight/10,f=Math.round(2.205*_);wrapper.innerHTML=`\n        <div id="${l}" class="pokemon_card--open ${s.name}">\n            <div class="pokemon_card__image" style="background-image: url(${a});"></div>\n            <div class="pokemon_card__description">\n                <h3 class="pokemon_card__description__name">${r}</h3>\n                <h4>${p}</h4>\n                <ul>\n                    ${s.types.map((e=>`\n                        <li>–${e.type.name.charAt(0).toUpperCase()+e.type.name.slice(1)}</li>\n                    `)).join("")}\n                </ul>\n                <h4>${h}</h4>\n                <ul>\n                    ${s.abilities.map((e=>`\n                        <li>–${e.ability.name.charAt(0).toUpperCase()+e.ability.name.slice(1)}</li>\n                    `)).join("")}\n                </ul>\n                <h4>Height</h4>\n                <p>${y}'${$} ft</p>\n                <h4>Weight</h4>\n                <p>${f} lbs</p>\n                <h4>Moves</h4>\n                <ul>\n                    ${s.moves.map((e=>`\n                        <li>–${e.move.name.charAt(0).toUpperCase()+e.move.name.slice(1)}</li>\n                    `)).join("")}\n                </ul>\n            </div>\n        </div>\n    `}},o=async()=>{const n=document.querySelector("header"),o=document.getElementById("wrapper");n.innerHTML=await'\n        <div class="title">\n            <a href="/">\n                <img src="img/return_arrow.png">\n            </a>\n            <h2>Pokédex</h2>\n        </div>\n        <p>by <a href="#">Federico Tejedor Llorente</a></p>\n    ';let s,a=location.hash.slice(1).toLocaleLowerCase().split("/")[1]||"/",i=await(e=>{if(e.length<=4){let n;return n="/"===e?e:"/:id",n}return`/${e}`})(a);if(t[i])s=t[i],await s(a);else{let n=document.querySelector("body"),t=document.querySelector("header");n.classList.remove("body--card_open"),t.classList.remove("header--card_open"),s=e,o.innerHTML=await s()}};window.addEventListener("load",o),window.addEventListener("hashchange",o)})();